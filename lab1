import numpy as np
def count_pairs_with_sum_10(arr):
    count = 0
    for i in range(len(arr)):
        for j in range(i + 1, len(arr)):
            if arr[i] + arr[j] == 10:
                count += 1
    return count
arr = [2, 7, 4, 1, 3, 6]
print("Number of pairs with sum equal to 10:", count_pairs_with_sum_10(arr))
def calculate_range(nums):
    if len(nums) < 3:
        return "Range determination not possible"
    else:
        return max(nums) - min(nums)

nums = [5, 3, 8, 1, 0, 4]
print("Range:", calculate_range(nums))
def matrix_exponentiation(matrix, power):
    return np.linalg.matrix_power(matrix, power)
A = np.array([[1, 2], [3, 4]])
m = 3
print("A^m:")
print(matrix_exponentiation(A, m))
def count_highest_occurrence(s):
    counts = {}
    for char in s:
        if char.isalpha():
            counts[char] = counts.get(char, 0) + 1
    if counts:
        max_char = max(counts, key=counts.get)
        return max_char, counts[max_char]
    else:
        return None, 0

input_string = "hippopotamus"
max_char, count = count_highest_occurrence(input_string)
print("Maximally occurring character:", max_char)
print("Occurrence count:", count)
